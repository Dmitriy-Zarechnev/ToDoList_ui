import { createSlice, PayloadAction } from "@reduxjs/toolkit";

// –¢–∏–ø—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
export type RequestStatusType = "idle" | "loading" | "succeeded" | "failed" | "updated";

// slice - reducer —Å–æ–∑–¥–∞–µ–º —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ createSlice
const slice = createSlice({
  // –≤–∞–∂–Ω–æ —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å, –±—É–¥–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—é redux ducks ü¶Ü
  name: "app",
  initialState: {
    status: "idle" as RequestStatusType,
    error: null as string | null,
    isInitialized: false as boolean
  },
  // sub-reducers, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–µ–Ω –æ–¥–Ω–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É case –≤ switch, –∫–∞–∫ –º—ã –¥–µ–ª–∞–ª–∏ —Ä–∞–Ω—å—à–µ (–æ–±—ã—á–Ω—ã–π redux)
  reducers: {
    setAppStatusAC: (state,
                     action: PayloadAction<{ status: RequestStatusType }>) => {
      state.status = action.payload.status;
    },
    setAppErrorAC: (state,
                    action: PayloadAction<{ error: string | null }>) => {
      state.error = action.payload.error;
    },
    setAppInitializedAC: (state,
                          action: PayloadAction<{ isInitialized: boolean }>) => {
      state.isInitialized = action.payload.isInitialized;
    }
  }
});

// –°–æ–∑–¥–∞–µ–º appReducer —Å –ø–æ–º–æ—â—å—é slice
export const appReducer = slice.reducer;

// Action creators –¥–æ—Å—Ç–∞–µ–º —Å –ø–æ–º–æ—â—å—é slice
export const {
  setAppStatusAC,
  setAppErrorAC,
  setAppInitializedAC
} = slice.actions;
// –¢–∏–ø–∏–∑–∞—Ü–∏—è AppInitialStateType –¥–ª—è —Ç–µ—Å—Ç–æ–≤
export type AppInitialStateType = ReturnType<typeof slice.getInitialState>

/*
// –¢–∏–ø–∏–∑–∞—Ü–∏—è Actions –≤—Å–µ–≥–æ appReducer
export type AppActionsTypes =
  | ReturnType<typeof setAppStatusAC>
  | ReturnType<typeof setAppErrorAC>
  | ReturnType<typeof setAppInitializedAC>;

// –¢–∏–ø—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
export type RequestStatusType = "idle" | "loading" | "succeeded" | "failed" | "updated";

// –¢–∏–ø–∏–∑–∞—Ü–∏—è initialState –¥–ª—è appReducer
export type AppInitialStateType = typeof initialState;

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å action –≤ appReducer
const SET_APP_STATUS = "APP/SET-APP-STATUS";
const SET_APP_ERROR = "APP/SET-APP-ERROR";
const SET_APP_INITIALIZED = "APP/SET-APP-INITIALIZED";

// *********** –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π state –¥–ª—è appReducer ****************
const initialState = {
  status: "idle" as RequestStatusType,
  error: null as string | null,
  isInitialized: false as boolean
};

// *********** Reducer - —á–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è state –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è action –æ—Ç dispatch ****************
export const appReducer = (state: AppInitialStateType = initialState, action: AppActionsTypes): AppInitialStateType => {
  switch (action.type) {
    case SET_APP_STATUS:
      return { ...state, status: action.status };

    case SET_APP_ERROR:
      return { ...state, error: action.error };

    case SET_APP_INITIALIZED:
      return { ...state, isInitialized: action.isInitialized };

    default:
      return state;
  }
};

// *********** Action creators - —Å–æ–∑–¥–∞—é—Ç –æ–±—ä–µ–∫—Ç action ****************
export const setAppStatusAC = (status: RequestStatusType) => {
  return { type: SET_APP_STATUS, status } as const;
};
export const setAppErrorAC = (error: string | null) => {
  return { type: SET_APP_ERROR, error } as const;
};
export const setAppInitializedAC = (isInitialized: boolean) => {
  return { type: SET_APP_INITIALIZED, isInitialized } as const;
};
 */

// *********** Thunk - –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å DAL ****************
