import { Dispatch } from "redux";
import { ResponseType } from "../api/todolist-api";
import { AppActionsTypes, setAppErrorAC, setAppStatusAC } from "../state/reducers/app-reducer";

// –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è dispatch
type ErrorUtilsDispatchType = Dispatch<AppActionsTypes>;

// generic function –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –æ—à–∏–±–∫–∏
export const handleServerAppError = <T>(data: ResponseType<T>, dispatch: ErrorUtilsDispatchType) => {
  // –ü—Ä–æ–≤–µ—Ä–∏–ª–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
  data.messages.length
    ? // –ó–∞–¥–∏—Å–ø–∞—Ç—á–∏–ª–∏ –æ—à–∏–±–∫—É —Å —Å–µ—Ä–≤–µ—Ä–∞
      dispatch(setAppErrorAC(data.messages[0]))
    : // –ó–∞–¥–∏—Å–ø–∞—Ç—á–∏–ª–∏ –æ—à–∏–±–∫—É —Å–≤–æ—é
      dispatch(setAppErrorAC("Some error occurredü§¨"));

  // –ò–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å
  dispatch(setAppStatusAC("failed"));
};

// function –¥–ª—è —Å–µ—Ç–µ–≤–æ–π –æ—à–∏–±–∫–∏
export const handleServerNetworkError = (error: any, dispatch: ErrorUtilsDispatchType) => {
  // –ó–∞–¥–∏—Å–ø–∞—Ç—á–∏–ª–∏ –æ—à–∏–±–∫—É —Å–µ—Ç–∏ –∏ –ø–æ–º–µ–Ω—è–ª–∏ —Å—Ç–∞—Ç—É—Å
  dispatch(setAppErrorAC(error.toString()));
  dispatch(setAppStatusAC("failed"));
};
